apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: digit-postgres-pvc-10
  namespace: digit
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: "replicated-storage-class"
  resources:
    requests:
      storage: 100Gi

---

apiVersion: v1
kind: Service
metadata:
  name: digit-postgres-headless
  namespace: digit
spec:
  selector:
    app: digit-postgres
  ports:
    - port: 5432
      targetPort: 5432
  clusterIP: None
  
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: init-db-config
  namespace: digit
data:
  init-db.sh: |
    #!/bin/bash
    set -e
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
        CREATE DATABASE ascug;
        CREATE DATABASE pros;
        CREATE DATABASE meas_params;
        CREATE DATABASE gar;
        CREATE DATABASE protect_means;
        CREATE DATABASE dgis;
        CREATE DATABASE dgcore_gar;
        CREATE DATABASE pros_pm;
        CREATE EXTENSION IF NOT EXISTS POSTGIS;
        CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    EOSQL
    echo "Database creation script executed successfully."

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: digit-postgres-deployment
  namespace: digit
spec:
  replicas: 1
  selector:
    matchLabels:
      app: digit-postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: digit-postgres
    spec:
      imagePullSecrets:
        - name: digit-dgepu-secret
      initContainers:
      - name: copy-init-script
        image: 85.141.97.224:443/busybox:latest
        command: ['sh', '-c', 'cp /config/init-db.sh /docker-entrypoint-initdb.d/ && chmod +x /docker-entrypoint-initdb.d/init-db.sh']
        volumeMounts:
        - name: config-volume
          mountPath: /config
        - name: init-db
          mountPath: /docker-entrypoint-initdb.d
      containers:
      - name: digit-postgres
        image: 85.141.97.224:443/postgis/postgis:12-3.4
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: "postgres"
        # - name: FFF
        #   value: "fff"
        - name: POSTGRES_PASSWORD
          value: "postgres"
        - name: POSTGRES_DB
          value: "postgres"
        - name: POSTGRES_HOST_AUTH_METHOD
          value: "md5"
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        volumeMounts:
        - name: digit-postgres-data-rsc
          mountPath: /var/lib/postgresql/data
        - name: init-db
          mountPath: /docker-entrypoint-initdb.d
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
            - -h
            - localhost
            - -p
            - "5432"
          initialDelaySeconds: 30  # Даем PostgreSQL время на запуск
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - 'psql -U postgres -d postgres -c "SELECT 1;"'
          initialDelaySeconds: 5
          periodSeconds: 10
      # nodeSelector:
      #   kubernetes.io/hostname: srv24
      volumes:
      - name: digit-postgres-data-rsc
        persistentVolumeClaim:
          claimName: digit-postgres-pvc-10
      - name: init-db
        emptyDir: {}
      - name: config-volume
        configMap:
          name: init-db-config
